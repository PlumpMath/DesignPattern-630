/**
 * 代理模式（Proxy Pattern）也叫委托模式，是一个使用效率非常高的模式。
 * 代理模式的英文版原话是：Provide a surrogate or placeholeder for another object to control access to it.
 * 意思是：为其他对象提供一种代理以控制对这个对象的访问。
 * 
 * 代理模式提供以下3个角色：
 * 	（1）抽象主题（Subject）角色：该角色是真实主题和代理主题的共同接口，
 * 							       以便在任何可以使用真实主题的地方都可以使用代理主题。
 * 	（2）代理主题（Proxy Subject）角色：也叫做委托类、代理类，该角色负责控制对真实主题的引用，
 * 							       负责在需要的时候创建或删除真实主题对象，并且在真实主题角色处理
 * 							       完毕前后做预处理和善后处理工作。
 * 	（3）真实主题（Real Subject）角色：该角色也叫做被委托角色、被代理角色，是业务逻辑的具体执行者。
 * 
 * 代理模式的种类：
 * 	（1）远程（Remote）代理：为一个位于不同的地址空间的对象提供一个局部代表对象。
 * 	（2）虚拟（Virtual）代理：有事需要创建一些消耗较多资源的对象，可以首先创建代理对象，而将真实对象的创建延迟。
 * 	（3）保护（Protect or Access）代理：控制对一个对象的访问，如果需要，可以给不同的用户提供不同级别的使用权限。
 * 	（4）缓存（Cache）代理：为某一个目标操作的结果提供临时的存储空间，以便多个客户端可以共享这些结果。
 * 	（5）同步（Synchronization）代理：使几个用户能够同时使用一个对象为没有冲突。
 * 	（6）智能引用（Smart Reference）代理：当一个对象被引用时，提供一些额外的操作，例如。记录访问的流量和次数。
 * 代理模式的优点：
 * 	（1）职责清晰：真实的角色实现实际的业务逻辑，不用关心其他非本职的事务，
 * 				通过后期的代理完成附加的事务，附加的结果就是编程简洁清晰。
 * 	（2）高拓展性：具体主题角色随需求不同可能有很多种，当只要实现接口，
 * 				代理类就完全可以再不做任何修改的情况下代理各种真实主题角色。
 * 	（3）智能化：代理类可以在运行时才确定需要去代理的真实主题，这是一种强大的功能。
 */
/**
 * @author zhengtaishuai
 *
 */
package 代理模式;